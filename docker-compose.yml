services:
  app:
    build: .
    container_name: dfs-recipes
    ports:
      - "${APP_PORT:-8000}:8000"
    volumes:
      - ${DATASETS_PATH:-./datasets}:/datasets
    environment:
      - ENV=development
    #    command: >
    #      sh -c "
    #        if [ '$${ENV}' = 'development' ]; then
    #          uvicorn dfs_recipes.main:app --host 0.0.0.0 --port 8000 --reload
    #        else
    #          gunicorn dfs_recipes.main:app -w 4 -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    #        fi
    #      "
    networks:
      - app-network
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./uv.lock
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-8080}:80"
      - "443:443"
    volumes:
      - ./web/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web/dist:/usr/share/nginx/html:ro
    depends_on:
      - app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
